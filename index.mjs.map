{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\nimport lnf from '@stdlib/math-base-special-lnf';\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32';\n\n\n// MAIN //\n\n/**\n* Computes `x * ln(y)` so that the result is `0` if `x = 0` for single-precision floating-point numbers `x` and `y`.\n*\n* @param {number} x - input value\n* @param {number} y - input value\n* @returns {number} function value\n*\n* @example\n* var out = xlogyf( 3.0, 2.0 );\n* // returns ~2.079\n*\n* @example\n* var out = xlogyf( 1.5, 5.9 );\n* // returns ~2.662\n*\n* @example\n* var out = xlogyf( 0.9, 1.0 );\n* // returns 0.0\n*\n* @example\n* var out = xlogyf( 0.0, -2.0 );\n* // returns 0.0\n*\n* @example\n* var out = xlogyf( 1.5, NaN );\n* // returns NaN\n*\n* @example\n* var out = xlogyf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var out = xlogyf( NaN, 2.3 );\n* // returns NaN\n*/\nfunction xlogyf( x, y ) {\n\tif ( x === 0.0 && !isnanf( y ) ) {\n\t\treturn 0.0;\n\t}\n\treturn float64ToFloat32( float64ToFloat32( x ) * lnf( float64ToFloat32( y ) ) );\n}\n\n\n// EXPORTS //\n\nexport default xlogyf;\n"],"names":["xlogyf","x","y","isnanf","float64ToFloat32","lnf"],"mappings":";;4SAgEA,SAASA,EAAQC,EAAGC,GACnB,OAAW,IAAND,GAAcE,EAAQD,GAGpBE,EAAkBA,EAAkBH,GAAMI,EAAKD,EAAkBF,KAFhE,CAGT"}